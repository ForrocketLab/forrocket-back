import { PrismaClient } from '@prisma/client';
import * as bcrypt from 'bcryptjs';

const prisma = new PrismaClient();

async function main() {
  console.log('üå± Iniciando seed do banco de dados...');

  // ==========================================
  // SEED - EVALUATION CYCLES
  // ==========================================
  console.log('üìÖ Criando ciclos de avalia√ß√£o...');

  const cycles = [
    {
      id: '2024.2',
      name: '2024.2',
      status: 'CLOSED' as const,
      phase: 'EQUALIZATION' as const,
      startDate: new Date('2024-07-01T00:00:00.000Z'),
      endDate: new Date('2024-12-31T23:59:59.999Z'),
      assessmentDeadline: new Date('2024-09-15T23:59:59.999Z'),
      managerDeadline: new Date('2024-10-15T23:59:59.999Z'),
      equalizationDeadline: new Date('2024-11-30T23:59:59.999Z'),
    },
    {
      id: '2025.1',
      name: '2025.1',
      status: 'OPEN' as const,
      phase: 'MANAGER_REVIEWS' as const,
      startDate: new Date('2025-01-01T00:00:00.000Z'),
      endDate: new Date('2025-07-19T23:59:59.999Z'),
      assessmentDeadline: new Date('2025-03-15T23:59:59.999Z'),
      managerDeadline: new Date('2025-07-15T23:59:59.999Z'),
      equalizationDeadline: new Date('2025-07-15T23:59:59.999Z'),
    },
    {
      id: '2025.2',
      name: '2025.2',
      status: 'UPCOMING' as const,
      phase: 'ASSESSMENTS' as const,
      startDate: new Date('2025-08-01T00:00:00.000Z'),
      endDate: new Date('2025-12-31T23:59:59.999Z'),
      assessmentDeadline: new Date('2025-10-31T23:59:59.999Z'),
      managerDeadline: new Date('2025-11-30T23:59:59.999Z'),
      equalizationDeadline: new Date('2025-12-15T23:59:59.999Z'),
    },
  ];

  for (const cycle of cycles) {
    await prisma.evaluationCycle.upsert({
      where: { id: cycle.id },
      update: cycle,
      create: cycle,
    });
  }

  // ==========================================
  // SEED - CRITERIA (CRIT√âRIOS DE AVALIA√á√ÉO)
  // ==========================================
  console.log('üìã Criando crit√©rios de avalia√ß√£o...');

  const criteria = [
    // BEHAVIOR - Crit√©rios Comportamentais
    {
      id: 'sentimento-de-dono',
      name: 'Sentimento de Dono',
      description: 'Demonstra responsabilidade e cuidado com o trabalho e resultados da empresa',
      pillar: 'BEHAVIOR' as const,
    },
    {
      id: 'resiliencia-adversidades',
      name: 'Resili√™ncia nas Adversidades',
      description: 'Mant√©m-se firme e adapt√°vel diante de desafios e dificuldades',
      pillar: 'BEHAVIOR' as const,
    },
    {
      id: 'organizacao-trabalho',
      name: 'Organiza√ß√£o no Trabalho',
      description: 'Mant√©m organiza√ß√£o pessoal e estrutura√ß√£o eficiente das atividades',
      pillar: 'BEHAVIOR' as const,
    },
    {
      id: 'capacidade-aprender',
      name: 'Capacidade de Aprender',
      description: 'Busca constantemente novos conhecimentos e desenvolvimento pessoal',
      pillar: 'BEHAVIOR' as const,
    },
    {
      id: 'team-player',
      name: 'Ser "Team Player"',
      description: 'Trabalha efetivamente em equipe e contribui para um ambiente colaborativo',
      pillar: 'BEHAVIOR' as const,
    },

    // EXECUTION - Crit√©rios de Execu√ß√£o
    {
      id: 'entregar-qualidade',
      name: 'Entregar com Qualidade',
      description: 'Entrega trabalho com alta qualidade e aten√ß√£o aos detalhes',
      pillar: 'EXECUTION' as const,
    },
    {
      id: 'atender-prazos',
      name: 'Atender aos Prazos',
      description: 'Entrega tarefas e projetos dentro dos prazos estabelecidos',
      pillar: 'EXECUTION' as const,
    },
    {
      id: 'fazer-mais-menos',
      name: 'Fazer Mais com Menos',
      description: 'Maximiza resultados com recursos dispon√≠veis, otimizando efici√™ncia',
      pillar: 'EXECUTION' as const,
    },
    {
      id: 'pensar-fora-caixa',
      name: 'Pensar Fora da Caixa',
      description: 'Demonstra criatividade e inova√ß√£o na resolu√ß√£o de problemas',
      pillar: 'EXECUTION' as const,
    },

    // MANAGEMENT - Crit√©rios de Gest√£o e Lideran√ßa (para gestores)
    {
      id: 'gestao-gente',
      name: 'Gente',
      description: 'Desenvolve, motiva e lidera pessoas de forma eficaz',
      pillar: 'MANAGEMENT' as const,
    },
    {
      id: 'gestao-resultados',
      name: 'Resultados',
      description: 'Foca em resultados e entrega valor consistente para a organiza√ß√£o',
      pillar: 'MANAGEMENT' as const,
    },
    {
      id: 'evolucao-rocket-corp',
      name: 'Evolu√ß√£o da Rocket Corp',
      description: 'Contribui estrategicamente para o crescimento e evolu√ß√£o da empresa',
      pillar: 'MANAGEMENT' as const,
    },
  ];

  for (const criterion of criteria) {
    await prisma.criterion.upsert({
      where: { id: criterion.id },
      update: criterion,
      create: criterion,
    });
  }

  // ==========================================
  // SEED - PROJECTS
  // ==========================================
  console.log('üèóÔ∏è Criando projetos...');

  const projects = [
    {
      id: 'projeto-alpha',
      name: 'Projeto Alpha',
      description: 'Desenvolvimento da nova plataforma de vendas com React e Node.js',
    },
    {
      id: 'projeto-beta',
      name: 'Projeto Beta',
      description: 'Moderniza√ß√£o do sistema de RH com migra√ß√£o para microservi√ßos',
    },
    {
      id: 'projeto-gamma',
      name: 'Projeto Gamma',
      description: 'Implementa√ß√£o de BI e analytics com Power BI e Apache Spark',
    },
    {
      id: 'projeto-delta',
      name: 'Projeto Delta',
      description: 'Migra√ß√£o para cloud computing (AWS) e containeriza√ß√£o com Docker',
    },
    {
      id: 'projeto-mobile-app',
      name: 'App Mobile RocketCorp',
      description: 'Desenvolvimento do aplicativo m√≥vel nativo para iOS e Android',
    },
    {
      id: 'projeto-api-core',
      name: 'API Core',
      description: 'Refatora√ß√£o e otimiza√ß√£o da API principal do sistema',
    },
  ];

  for (const project of projects) {
    await prisma.project.upsert({
      where: { id: project.id },
      update: project,
      create: project,
    });
  }

  // ==========================================
  // LIMPEZA E CRIA√á√ÉO DE USU√ÅRIOS
  // ==========================================
  console.log('üßπ Limpando dados existentes...');
  await prisma.userProjectRole.deleteMany();
  await prisma.userProjectAssignment.deleteMany();
  await prisma.userRoleAssignment.deleteMany();
  await prisma.user.deleteMany();

  // Cria senha hasheada
  const password = 'password123';
  const hashedPassword = await bcrypt.hash(password, 10);

  console.log('üë• Criando usu√°rios com nova estrutura...');

  // ==========================================
  // USU√ÅRIO 1: EDUARDO TECH - ADMIN PURO
  // ==========================================
  const eduardo = await prisma.user.create({
    data: {
      name: 'Eduardo Jos√© Ferreira da Silva',
      email: 'eduardo.tech@rocketcorp.com',
      passwordHash: hashedPassword,
      roles: JSON.stringify(['admin']), // Campo legado - mantido para compatibilidade

      // Dados organizacionais completos
      jobTitle: 'DevOps Engineer',
      seniority: 'S√™nior',
      careerTrack: 'Tech',
      businessUnit: 'Operations',

      // Admin puro - sem v√≠nculos de projeto ou hierarquia
      projects: null,
      managerId: null,
      directReports: null,
      mentorId: null,

      isActive: true,
    },
  });

  console.log(`‚úÖ Usu√°rio ADMIN criado: ${eduardo.name} (${eduardo.email})`);

  // ==========================================
  // USU√ÅRIO 2: DIANA COSTA - RH PURO
  // ==========================================
  const diana = await prisma.user.create({
    data: {
      name: 'Diana Cristina Costa Lima',
      email: 'diana.costa@rocketcorp.com',
      passwordHash: hashedPassword,
      roles: JSON.stringify(['rh']),

      // Dados organizacionais completos
      jobTitle: 'People & Culture Manager',
      seniority: 'S√™nior',
      careerTrack: 'Business',
      businessUnit: 'Operations',

      // RH puro - sem v√≠nculos de projeto ou hierarquia
      projects: null,
      managerId: null,
      directReports: null,
      mentorId: null,

      isActive: true,
    },
  });

  console.log(`‚úÖ Usu√°rio RH criado: ${diana.name} (${diana.email})`);

  // ==========================================
  // USU√ÅRIO 3: CARLA DIAS - COMIT√ä PURO
  // ==========================================
  const carla = await prisma.user.create({
    data: {
      name: 'Carla Regina Dias Fernandes',
      email: 'carla.dias@rocketcorp.com',
      passwordHash: hashedPassword,
      roles: JSON.stringify(['comite']),

      // Dados organizacionais completos
      jobTitle: 'Head of Engineering',
      seniority: 'Principal',
      careerTrack: 'Tech',
      businessUnit: 'Digital Products',

      // Comit√™ puro - sem v√≠nculos de projeto ou hierarquia
      projects: null,
      managerId: null,
      directReports: null,
      mentorId: null,

      isActive: true,
    },
  });

  console.log(`‚úÖ Usu√°rio COMIT√ä criado: ${carla.name} (${carla.email})`);

  // ==========================================
  // USU√ÅRIO 4: BRUNO MENDES - GESTOR + COLABORADOR
  // ==========================================
  const bruno = await prisma.user.create({
    data: {
      name: 'Bruno Andr√© Mendes Carvalho',
      email: 'bruno.mendes@rocketcorp.com',
      passwordHash: hashedPassword,
      roles: JSON.stringify(['colaborador', 'gestor']),

      // Dados organizacionais completos
      jobTitle: 'Tech Lead',
      seniority: 'S√™nior',
      careerTrack: 'Tech',
      businessUnit: 'Digital Products',

      // Dados de projetos (legado - agora substitu√≠do por UserProjectAssignment + UserProjectRole)
      projects: JSON.stringify(['projeto-alpha', 'projeto-api-core']),
      managerId: null,
      directReports: JSON.stringify([]), // Ser√° atualizado ap√≥s criar Ana e Felipe
      mentorId: null,

      isActive: true,
    },
  });

  console.log(`‚úÖ Usu√°rio GESTOR+COLABORADOR criado: ${bruno.name} (${bruno.email})`);

  // ==========================================
  // USU√ÅRIO 5: ANA OLIVEIRA - COLABORADORA
  // ==========================================
  const ana = await prisma.user.create({
    data: {
      name: 'Ana Beatriz Oliveira Santos',
      email: 'ana.oliveira@rocketcorp.com',
      passwordHash: hashedPassword,
      roles: JSON.stringify(['colaborador']),

      // Dados organizacionais completos
      jobTitle: 'Desenvolvedora Frontend',
      seniority: 'Pleno',
      careerTrack: 'Tech',
      businessUnit: 'Digital Products',

      // Dados de projetos
      projects: JSON.stringify(['projeto-alpha', 'projeto-mobile-app']),
      managerId: bruno.id, // Bruno √© seu gestor
      directReports: null, // Ana n√£o tem liderados
      mentorId: null, // Sem mentor neste exemplo

      isActive: true,
    },
  });

  console.log(`‚úÖ Usu√°rio COLABORADOR criado: ${ana.name} (${ana.email})`);

  // ==========================================
  // USU√ÅRIO 6: FELIPE SILVA - COLABORADOR
  // ==========================================
  const felipe = await prisma.user.create({
    data: {
      name: 'Felipe Augusto Silva Rodrigues',
      email: 'felipe.silva@rocketcorp.com',
      passwordHash: hashedPassword,
      roles: JSON.stringify(['colaborador']),

      // Dados organizacionais completos
      jobTitle: 'Desenvolvedor Backend',
      seniority: 'J√∫nior',
      careerTrack: 'Tech',
      businessUnit: 'Digital Products',

      // Dados de projetos
      projects: JSON.stringify(['projeto-api-core', 'projeto-mobile-app']),
      managerId: bruno.id, // Bruno √© seu gestor
      directReports: null, // Felipe n√£o tem liderados
      mentorId: ana.id, // Ana √© sua mentora

      isActive: true,
    },
  });

  console.log(`‚úÖ Usu√°rio COLABORADOR criado: ${felipe.name} (${felipe.email})`);

  // ==========================================
  // ATUALIZAR DIRECT REPORTS DO BRUNO
  // ==========================================
  await prisma.user.update({
    where: { id: bruno.id },
    data: {
      directReports: JSON.stringify([ana.id, felipe.id]),
    },
  });
  console.log(`‚úÖ Bruno ‚Üí Liderados: Ana e Felipe`);

  // ==========================================
  // CONFIGURA√á√ÉO DE ROLE ASSIGNMENTS (NOVAS ESTRUTURAS)
  // ==========================================
  console.log('üë• Configurando role assignments globais...');

  const roleAssignments = [
    // Eduardo: Admin puro
    { userId: eduardo.id, role: 'ADMIN' as const },

    // Diana: RH puro
    { userId: diana.id, role: 'RH' as const },

    // Carla: Comit√™ puro
    { userId: carla.id, role: 'COMMITTEE' as const },

    // Bruno: Colaborador + Gestor
    { userId: bruno.id, role: 'COLLABORATOR' as const },
    { userId: bruno.id, role: 'MANAGER' as const },

    // Ana: Colaboradora
    { userId: ana.id, role: 'COLLABORATOR' as const },

    // Felipe: Colaborador
    { userId: felipe.id, role: 'COLLABORATOR' as const },
  ];

  for (const assignment of roleAssignments) {
    await prisma.userRoleAssignment.upsert({
      where: {
        userId_role: {
          userId: assignment.userId,
          role: assignment.role,
        },
      },
      update: {},
      create: assignment,
    });
  }

  // ==========================================
  // CONFIGURA√á√ÉO DE ATRIBUI√á√ïES DE PROJETO (APENAS PARA MEMBROS DE PROJETO)
  // ==========================================
  console.log('üìã Configurando atribui√ß√µes de projeto...');

  const projectAssignments = [
    // Bruno: Projeto Alpha (liderar) e API Core
    { userId: bruno.id, projectId: 'projeto-alpha' },
    { userId: bruno.id, projectId: 'projeto-api-core' },

    // Ana: Projeto Alpha e Mobile App
    { userId: ana.id, projectId: 'projeto-alpha' },
    { userId: ana.id, projectId: 'projeto-mobile-app' },

    // Felipe: API Core e Mobile App
    { userId: felipe.id, projectId: 'projeto-api-core' },
    { userId: felipe.id, projectId: 'projeto-mobile-app' },
  ];

  for (const assignment of projectAssignments) {
    await prisma.userProjectAssignment.upsert({
      where: {
        userId_projectId: {
          userId: assignment.userId,
          projectId: assignment.projectId,
        },
      },
      update: {},
      create: assignment,
    });
  }

  // ==========================================
  // CONFIGURA√á√ÉO DE ROLES POR PROJETO (UserProjectRole)
  // ==========================================
  console.log('üîë Configurando roles espec√≠ficas por projeto...');

  const userProjectRoles = [
    // PROJETO ALPHA - Plataforma de Vendas
    { userId: bruno.id, projectId: 'projeto-alpha', role: 'MANAGER' as const }, // Bruno √© gestor no Alpha
    { userId: ana.id, projectId: 'projeto-alpha', role: 'COLLABORATOR' as const }, // Ana colaboradora no Alpha

    // PROJETO API CORE
    { userId: bruno.id, projectId: 'projeto-api-core', role: 'MANAGER' as const }, // Bruno gestor no API Core
    { userId: felipe.id, projectId: 'projeto-api-core', role: 'COLLABORATOR' as const }, // Felipe colaborador no API Core

    // PROJETO MOBILE APP
    { userId: ana.id, projectId: 'projeto-mobile-app', role: 'COLLABORATOR' as const }, // Ana colaboradora no Mobile
    { userId: felipe.id, projectId: 'projeto-mobile-app', role: 'COLLABORATOR' as const }, // Felipe colaborador no Mobile
  ];

  for (const userProjectRole of userProjectRoles) {
    await prisma.userProjectRole.upsert({
      where: {
        userId_projectId_role: {
          userId: userProjectRole.userId,
          projectId: userProjectRole.projectId,
          role: userProjectRole.role,
        },
      },
      update: {},
      create: userProjectRole,
    });
  }

  // ==========================================
  // SEED - AVALIA√á√ïES COMPLETAS CICLO 2025.1
  // ==========================================
  console.log('üìù Criando avalia√ß√µes completas para o ciclo 2025.1...');

  // ===== AUTOAVALIA√á√ïES COMPLETAS =====
  console.log('üìù Criando autoavalia√ß√µes...');

  // Ana - Autoavalia√ß√£o
  await prisma.selfAssessment.create({
    data: {
      authorId: ana.id,
      cycle: '2025.1',
      status: 'SUBMITTED',
      submittedAt: new Date('2025-03-10T14:30:00Z'),
      answers: {
        createMany: {
          data: [
            {
              criterionId: 'sentimento-de-dono',
              score: 5,
              justification: 'Sempre assumo total responsabilidade pelos projetos e resultados',
            },
            {
              criterionId: 'resiliencia-adversidades',
              score: 4,
              justification: 'Mantenho-me firme diante de desafios, sempre buscando solu√ß√µes',
            },
            {
              criterionId: 'organizacao-trabalho',
              score: 5,
              justification: 'Mantenho alta organiza√ß√£o pessoal e estrutura√ß√£o eficiente',
            },
            {
              criterionId: 'capacidade-aprender',
              score: 5,
              justification: 'Busco constantemente novos conhecimentos e tecnologias',
            },
            {
              criterionId: 'team-player',
              score: 5,
              justification: 'Trabalho muito bem em equipe e contribuo para ambiente colaborativo',
            },
            {
              criterionId: 'entregar-qualidade',
              score: 4,
              justification: 'Entrego sempre com alta qualidade e aten√ß√£o aos detalhes',
            },
            {
              criterionId: 'atender-prazos',
              score: 4,
              justification: 'Cumpro prazos estabelecidos de forma consistente',
            },
            {
              criterionId: 'fazer-mais-menos',
              score: 4,
              justification: 'Otimizo recursos e maximizo resultados',
            },
            {
              criterionId: 'pensar-fora-caixa',
              score: 4,
              justification: 'Demonstro criatividade na resolu√ß√£o de problemas',
            },
          ],
        },
      },
    },
  });

  // Bruno - Autoavalia√ß√£o
  await prisma.selfAssessment.create({
    data: {
      authorId: bruno.id,
      cycle: '2025.1',
      status: 'SUBMITTED',
      submittedAt: new Date('2025-03-12T16:45:00Z'),
      answers: {
        createMany: {
          data: [
            {
              criterionId: 'sentimento-de-dono',
              score: 5,
              justification:
                'Como Tech Lead, assumo total responsabilidade pela equipe e resultados',
            },
            {
              criterionId: 'resiliencia-adversidades',
              score: 5,
              justification: 'Mantenho-me firme e apoio a equipe em situa√ß√µes desafiadoras',
            },
            {
              criterionId: 'organizacao-trabalho',
              score: 4,
              justification: 'Mantenho boa organiza√ß√£o, sempre buscando melhorar',
            },
            {
              criterionId: 'capacidade-aprender',
              score: 5,
              justification: 'Estudo constantemente novas tecnologias e pr√°ticas de lideran√ßa',
            },
            {
              criterionId: 'team-player',
              score: 5,
              justification: 'Trabalho colaborativamente e facilito a colabora√ß√£o da equipe',
            },
            {
              criterionId: 'entregar-qualidade',
              score: 5,
              justification: 'Garanto alta qualidade nas entregas da equipe',
            },
            {
              criterionId: 'atender-prazos',
              score: 4,
              justification: 'Gerencio prazos eficientemente para toda a equipe',
            },
            {
              criterionId: 'fazer-mais-menos',
              score: 5,
              justification: 'Otimizo recursos e processos da equipe',
            },
            {
              criterionId: 'pensar-fora-caixa',
              score: 4,
              justification: 'Busco solu√ß√µes inovadoras para desafios t√©cnicos',
            },
            {
              criterionId: 'gestao-gente',
              score: 4,
              justification: 'Desenvolvo e motivo minha equipe, sempre buscando melhorar',
            },
            {
              criterionId: 'gestao-resultados',
              score: 5,
              justification: 'Foco em resultados e entrego valor consistente',
            },
            {
              criterionId: 'evolucao-rocket-corp',
              score: 4,
              justification: 'Contribuo estrategicamente para evolu√ß√£o da empresa',
            },
          ],
        },
      },
    },
  });

  // Felipe - Autoavalia√ß√£o
  await prisma.selfAssessment.create({
    data: {
      authorId: felipe.id,
      cycle: '2025.1',
      status: 'SUBMITTED',
      submittedAt: new Date('2025-03-14T11:20:00Z'),
      answers: {
        createMany: {
          data: [
            {
              criterionId: 'sentimento-de-dono',
              score: 4,
              justification: 'Assumo responsabilidade pelos meus projetos e busco sempre melhorar',
            },
            {
              criterionId: 'resiliencia-adversidades',
              score: 4,
              justification: 'Mantenho-me positivo diante de desafios e busco aprender',
            },
            {
              criterionId: 'organizacao-trabalho',
              score: 3,
              justification: 'Estou melhorando minha organiza√ß√£o pessoal continuamente',
            },
            {
              criterionId: 'capacidade-aprender',
              score: 5,
              justification: 'Tenho grande sede de aprender e me desenvolver',
            },
            {
              criterionId: 'team-player',
              score: 5,
              justification: 'Colaboro muito bem com a equipe e ajudo colegas',
            },
            {
              criterionId: 'entregar-qualidade',
              score: 4,
              justification: 'Entrego com qualidade e aten√ß√£o aos detalhes',
            },
            {
              criterionId: 'atender-prazos',
              score: 4,
              justification: 'Cumpro prazos estabelecidos de forma consistente',
            },
            {
              criterionId: 'fazer-mais-menos',
              score: 3,
              justification: 'Estou aprendendo a otimizar recursos e processos',
            },
            {
              criterionId: 'pensar-fora-caixa',
              score: 4,
              justification: 'Busco solu√ß√µes criativas para problemas t√©cnicos',
            },
          ],
        },
      },
    },
  });

  // ===== AVALIA√á√ïES 360¬∞ COMPLETAS =====
  console.log('üîÑ Criando avalia√ß√µes 360¬∞...');

  // Ana avalia Bruno
  await prisma.assessment360.create({
    data: {
      authorId: ana.id,
      evaluatedUserId: bruno.id,
      cycle: '2025.1',
      status: 'SUBMITTED',
      submittedAt: new Date('2025-03-11T10:30:00Z'),
      overallScore: 5,
      strengths:
        'Excelente lideran√ßa t√©cnica, sempre dispon√≠vel para ajudar a equipe, vis√£o estrat√©gica clara',
      improvements: 'Poderia delegar mais algumas tarefas para desenvolver ainda mais a equipe',
    },
  });

  // Ana avalia Felipe
  await prisma.assessment360.create({
    data: {
      authorId: ana.id,
      evaluatedUserId: felipe.id,
      cycle: '2025.1',
      status: 'SUBMITTED',
      submittedAt: new Date('2025-03-11T11:00:00Z'),
      overallScore: 3,
      strengths: 'Muito proativo, grande vontade de aprender, colaborativo e receptivo a feedbacks',
      improvements: 'Pode melhorar a organiza√ß√£o pessoal e planejamento de tarefas',
    },
  });

  // Bruno avalia Ana
  await prisma.assessment360.create({
    data: {
      authorId: bruno.id,
      evaluatedUserId: ana.id,
      cycle: '2025.1',
      status: 'SUBMITTED',
      submittedAt: new Date('2025-03-13T14:15:00Z'),
      overallScore: 4,
      strengths: 'Excelente qualidade t√©cnica, muito organizada, grande senso de responsabilidade',
      improvements: 'Poderia assumir mais iniciativas de lideran√ßa t√©cnica em projetos',
    },
  });

  // Bruno avalia Felipe
  await prisma.assessment360.create({
    data: {
      authorId: bruno.id,
      evaluatedUserId: felipe.id,
      cycle: '2025.1',
      status: 'SUBMITTED',
      submittedAt: new Date('2025-03-13T14:45:00Z'),
      overallScore: 4,
      strengths: 'Muito dedicado, aprende rapidamente, boa colabora√ß√£o em equipe',
      improvements: 'Pode melhorar organiza√ß√£o e autonomia em tarefas complexas',
    },
  });

  // Felipe avalia Ana
  await prisma.assessment360.create({
    data: {
      authorId: felipe.id,
      evaluatedUserId: ana.id,
      cycle: '2025.1',
      status: 'SUBMITTED',
      submittedAt: new Date('2025-03-15T09:20:00Z'),
      overallScore: 5,
      strengths: 'Muito organizada, sempre disposta a ajudar, excelente qualidade t√©cnica',
      improvements: 'J√° est√° em um n√≠vel muito bom, poderia compartilhar mais conhecimento',
    },
  });

  // Felipe avalia Bruno
  await prisma.assessment360.create({
    data: {
      authorId: felipe.id,
      evaluatedUserId: bruno.id,
      cycle: '2025.1',
      status: 'SUBMITTED',
      submittedAt: new Date('2025-03-15T09:45:00Z'),
      overallScore: 5,
      strengths: 'Excelente l√≠der, sempre dispon√≠vel, ensina muito bem, vis√£o t√©cnica forte',
      improvements: 'Est√° em um n√≠vel muito alto, talvez poderia focar mais em estrat√©gia',
    },
  });

  // ===== MENTORING ASSESSMENT =====
  console.log('üéì Criando avalia√ß√£o de mentoring...');

  // Felipe avalia Ana (como mentora)
  await prisma.mentoringAssessment.create({
    data: {
      authorId: felipe.id,
      mentorId: ana.id,
      cycle: '2025.1',
      status: 'SUBMITTED',
      submittedAt: new Date('2025-03-16T16:30:00Z'),
      score: 5,
      justification:
        'Ana tem sido uma mentora excepcional, sempre dispon√≠vel para tirar d√∫vidas e me orientar no desenvolvimento t√©cnico',
    },
  });

  // ===== REFERENCE FEEDBACKS =====
  console.log('üí≠ Criando reference feedbacks...');

  // Ana d√° refer√™ncia para Bruno
  await prisma.referenceFeedback.create({
    data: {
      authorId: ana.id,
      referencedUserId: bruno.id,
      cycle: '2025.1',
      status: 'SUBMITTED',
      submittedAt: new Date('2025-03-17T10:00:00Z'),
      topic: 'Lideran√ßa T√©cnica',
      justification:
        'Bruno demonstra excelente lideran√ßa t√©cnica, sempre orientando a equipe com clareza e paci√™ncia',
    },
  });

  // Ana d√° refer√™ncia para Felipe
  await prisma.referenceFeedback.create({
    data: {
      authorId: ana.id,
      referencedUserId: felipe.id,
      cycle: '2025.1',
      status: 'SUBMITTED',
      submittedAt: new Date('2025-03-17T10:15:00Z'),
      topic: 'Crescimento e Proatividade',
      justification:
        'Felipe tem mostrado crescimento constante e grande proatividade para aprender',
    },
  });

  // Bruno d√° refer√™ncia para Ana
  await prisma.referenceFeedback.create({
    data: {
      authorId: bruno.id,
      referencedUserId: ana.id,
      cycle: '2025.1',
      status: 'SUBMITTED',
      submittedAt: new Date('2025-03-17T11:00:00Z'),
      topic: 'Qualidade e Organiza√ß√£o',
      justification:
        'Ana √© refer√™ncia em qualidade t√©cnica e organiza√ß√£o, sempre entrega trabalho impec√°vel',
    },
  });

  // Bruno d√° refer√™ncia para Felipe
  await prisma.referenceFeedback.create({
    data: {
      authorId: bruno.id,
      referencedUserId: felipe.id,
      cycle: '2025.1',
      status: 'SUBMITTED',
      submittedAt: new Date('2025-03-17T11:15:00Z'),
      topic: 'Dedica√ß√£o e Aprendizado',
      justification:
        'Felipe demonstra grande dedica√ß√£o e velocidade de aprendizado, sempre busca melhorar',
    },
  });

  // Felipe d√° refer√™ncia para Ana
  await prisma.referenceFeedback.create({
    data: {
      authorId: felipe.id,
      referencedUserId: ana.id,
      cycle: '2025.1',
      status: 'SUBMITTED',
      submittedAt: new Date('2025-03-17T14:00:00Z'),
      topic: 'Mentoria e Colabora√ß√£o',
      justification: 'Ana √© uma excelente colega, sempre disposta a ajudar e ensinar',
    },
  });

  // Felipe d√° refer√™ncia para Bruno
  await prisma.referenceFeedback.create({
    data: {
      authorId: felipe.id,
      referencedUserId: bruno.id,
      cycle: '2025.1',
      status: 'SUBMITTED',
      submittedAt: new Date('2025-03-17T14:15:00Z'),
      topic: 'Lideran√ßa e Desenvolvimento',
      justification:
        'Bruno √© um l√≠der excepcional, sempre nos desenvolve e apoia nosso crescimento',
    },
  });

  // ===== AVALIA√á√ïES DE GESTOR COMPLETAS =====
  console.log('üëî Criando avalia√ß√µes de gestor...');

  // Bruno avalia Ana (como gestor)
  await prisma.managerAssessment.create({
    data: {
      authorId: bruno.id,
      evaluatedUserId: ana.id,
      cycle: '2025.1',
      status: 'SUBMITTED',
      submittedAt: new Date('2025-04-10T15:30:00Z'),
      answers: {
        createMany: {
          data: [
            {
              criterionId: 'sentimento-de-dono',
              score: 5,
              justification: 'Ana sempre assume total responsabilidade pelos projetos',
            },
            {
              criterionId: 'resiliencia-adversidades',
              score: 5,
              justification: 'Mant√©m-se firme e positiva diante de qualquer desafio',
            },
            {
              criterionId: 'organizacao-trabalho',
              score: 5,
              justification: 'Extremamente organizada, refer√™ncia para a equipe',
            },
            {
              criterionId: 'capacidade-aprender',
              score: 5,
              justification: 'Sempre busca novos conhecimentos e tecnologias',
            },
            {
              criterionId: 'team-player',
              score: 5,
              justification: 'Excelente colabora√ß√£o e sempre ajuda colegas',
            },
            {
              criterionId: 'entregar-qualidade',
              score: 5,
              justification: 'Entregas sempre impec√°veis e com alta qualidade',
            },
            {
              criterionId: 'atender-prazos',
              score: 5,
              justification: 'Sempre cumpre prazos, at√© antecipa entregas',
            },
            {
              criterionId: 'fazer-mais-menos',
              score: 4,
              justification: 'Otimiza recursos e busca efici√™ncia',
            },
            {
              criterionId: 'pensar-fora-caixa',
              score: 4,
              justification: 'Apresenta solu√ß√µes criativas para problemas',
            },
          ],
        },
      },
    },
  });

  // Bruno avalia Felipe (como gestor)
  await prisma.managerAssessment.create({
    data: {
      authorId: bruno.id,
      evaluatedUserId: felipe.id,
      cycle: '2025.1',
      status: 'SUBMITTED',
      submittedAt: new Date('2025-04-10T16:00:00Z'),
      answers: {
        createMany: {
          data: [
            {
              criterionId: 'sentimento-de-dono',
              score: 4,
              justification: 'Felipe tem desenvolvido bem o senso de responsabilidade',
            },
            {
              criterionId: 'resiliencia-adversidades',
              score: 4,
              justification: 'Mant√©m-se positivo e busca solu√ß√µes',
            },
            {
              criterionId: 'organizacao-trabalho',
              score: 3,
              justification: 'Est√° melhorando organiza√ß√£o, ainda h√° espa√ßo para crescer',
            },
            {
              criterionId: 'capacidade-aprender',
              score: 5,
              justification: 'Excepcional velocidade de aprendizado',
            },
            {
              criterionId: 'team-player',
              score: 5,
              justification: 'Excelente colabora√ß√£o e esp√≠rito de equipe',
            },
            {
              criterionId: 'entregar-qualidade',
              score: 4,
              justification: 'Entrega com boa qualidade, sempre melhorando',
            },
            {
              criterionId: 'atender-prazos',
              score: 4,
              justification: 'Cumpre prazos de forma consistente',
            },
            {
              criterionId: 'fazer-mais-menos',
              score: 3,
              justification: 'Est√° aprendendo a otimizar recursos',
            },
            {
              criterionId: 'pensar-fora-caixa',
              score: 4,
              justification: 'Demonstra criatividade em solu√ß√µes t√©cnicas',
            },
          ],
        },
      },
    },
  });

  console.log('‚úÖ Estruturas de relacionamento configuradas!');

  // ==========================================
  // RESUMO FINAL
  // ==========================================
  console.log('‚úÖ Seed conclu√≠do com sucesso!');
  console.log('üìä Estruturas criadas:');
  console.log(`   - ${cycles.length} ciclos de avalia√ß√£o`);
  console.log(
    `   - ${criteria.length} crit√©rios (${criteria.filter((c) => c.pillar === 'BEHAVIOR').length} comportamentais, ${criteria.filter((c) => c.pillar === 'EXECUTION').length} execu√ß√£o, ${criteria.filter((c) => c.pillar === 'MANAGEMENT').length} gest√£o)`,
  );
  console.log(`   - ${projects.length} projetos`);
  console.log(`   - 6 usu√°rios com perfis separados por escopo`);
  console.log(`   - ${roleAssignments.length} atribui√ß√µes de role globais`);
  console.log(`   - ${projectAssignments.length} atribui√ß√µes de projeto`);
  console.log(`   - ${userProjectRoles.length} roles espec√≠ficas por projeto`);
  console.log('');

  // ==========================================
  // RESUMO DOS CICLOS E FASES
  // ==========================================
  console.log('üîÑ Estado dos Ciclos:');
  console.log('');
  cycles.forEach((cycle) => {
    const statusIcon = cycle.status === 'OPEN' ? 'üü¢' : cycle.status === 'CLOSED' ? 'üî¥' : 'üü°';
    let phaseIcon = '‚ùì';
    const phase = cycle.phase as string;
    if (phase === 'ASSESSMENTS') phaseIcon = 'üìù';
    else if (phase === 'MANAGER_REVIEWS') phaseIcon = 'üëî';
    else if (phase === 'EQUALIZATION') phaseIcon = '‚öñÔ∏è';

    console.log(`  ${statusIcon} ${cycle.name} | ${cycle.status} | ${phaseIcon} ${cycle.phase}`);
  });

  console.log('');
  console.log('üéØ Ciclo Ativo: 2025.1 na fase EQUALIZATION');
  console.log('  ‚úÖ Todas as avalia√ß√µes completas para Bruno, Ana e Felipe');
  console.log('  üìù 3 Autoavalia√ß√µes (Ana, Bruno, Felipe)');
  console.log('  üîÑ 6 Avalia√ß√µes 360¬∞ (todas as combina√ß√µes)');
  console.log('  üéì 1 Mentoring Assessment (Felipe ‚Üí Ana)');
  console.log('  üí≠ 6 Reference Feedbacks (todos os pares)');
  console.log('  üëî 2 Avalia√ß√µes de Gestor (Bruno ‚Üí Ana, Felipe)');
  console.log('  ‚öñÔ∏è Pronto para Equaliza√ß√£o pelo Comit√™ (Carla)');
  console.log('');

  console.log('üë• Usu√°rios dispon√≠veis para teste:');
  console.log('');
  console.log('  üìß carla.dias@rocketcorp.com - Senha: password123');
  console.log(
    '     üë§ Carla Dias | üéØ Comit√™ | üíº Head of Engineering Principal | ‚öñÔ∏è Pode fazer equaliza√ß√£o',
  );
  console.log('');
  console.log('  üìß ana.oliveira@rocketcorp.com - Senha: password123');
  console.log(
    '     üë§ Ana Oliveira | üéØ Colaboradora | üíº Desenvolvedora Frontend Pleno | ‚úÖ Avalia√ß√µes completas',
  );
  console.log('');
  console.log('  üìß bruno.mendes@rocketcorp.com - Senha: password123');
  console.log(
    '     üë§ Bruno Mendes | üéØ Gestor + Colaborador | üíº Tech Lead S√™nior | ‚úÖ Avalia√ß√µes completas',
  );
  console.log('');
  console.log('  üìß felipe.silva@rocketcorp.com - Senha: password123');
  console.log(
    '     üë§ Felipe Silva | üéØ Colaborador | üíº Desenvolvedor Backend J√∫nior | ‚úÖ Avalia√ß√µes completas',
  );
  console.log('');
  console.log('  üìß diana.costa@rocketcorp.com - Senha: password123');
  console.log('     üë§ Diana Costa | üéØ RH | üíº People & Culture Manager S√™nior');
  console.log('');
  console.log('  üìß eduardo.tech@rocketcorp.com - Senha: password123');
  console.log('     üë§ Eduardo Tech | üéØ Admin | üíº DevOps Engineer S√™nior');
  console.log('');
  console.log('üîÑ Estado dos Ciclos de Avalia√ß√£o:');
  console.log('  üî¥ 2024.2 | CLOSED | ‚öñÔ∏è EQUALIZATION (Finalizado)');
  console.log('    üìÖ 2024-07-01 a 2024-12-31 | ‚è∞ Equaliza√ß√£o at√© 2024-11-15');
  console.log('  üü¢ 2025.1 | OPEN | ‚öñÔ∏è EQUALIZATION (Ativo - Pronto para Comit√™)');
  console.log('    üìÖ 2024-10-01 a 2024-12-31 | ‚è∞ Equaliza√ß√£o at√© 2024-12-30');
  console.log('  üü° 2025.2 | UPCOMING | üìù ASSESSMENTS (Futuro)');
  console.log('    üìÖ 2025-08-01 a 2025-12-31 | ‚è∞ Prazos configurados');
  console.log('');
  console.log('üìã Cronograma de Fases 2025.1:');
  console.log('  üìù Fase 1 - Avalia√ß√µes: at√© 15/03/2025 ‚úÖ COMPLETA');
  console.log('  üëî Fase 2 - Gestores: at√© 15/04/2025 ‚úÖ COMPLETA');
  console.log('  ‚öñÔ∏è Fase 3 - Equaliza√ß√£o: at√© 31/05/2025 üîÑ ATUAL');
  console.log('');
  console.log('‚úÖ Sistema pronto para equaliza√ß√£o!');
  console.log('   Carla pode fazer login e equalizar as avalia√ß√µes de Bruno, Ana e Felipe');
}

main()
  .catch((e) => {
    console.error('‚ùå Erro durante o seed:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });
